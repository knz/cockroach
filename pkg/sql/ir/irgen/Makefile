YACC="../../../../../../../../bin/goyacc"
SHELL = /bin/bash
SOURCES = scan.go main.go irgen.go idl.go

all: irgen test

irgen: $(SOURCES)
	go build

irgen.go: irgen.y
	set -eo pipefail; ret=`$(YACC) -o irgen.go.tmp -p irgen irgen.y`; \
	  ! echo "$$ret" | grep -F conflicts
	(echo '// Code generated by goyacc.'; \
	 echo '// GENERATED FILE DO NOT EDIT'; \
	 cat $@.tmp) >$@ && rm -f $@.tmp

clean:
	rm -f irgen irgen.go y.output
	rm -f test/*/*.*.go test/*/*.proto
	find . -name \*~ -exec rm -f '{}' \;

.PHONY: test
test:
	$(MAKE) runtests TESTS="$(wildcard test/*.def)"

runtests: $(foreach T,$(TESTS),$(basename $(T)).run)

preparetests: $(foreach T,$(TESTS),$(basename $(T))/test.pb.go)

.SUFFIXES: .def .proto .pb.go
test/%/test.proto: test/%.def irgen
	mkdir -p test/$*
	./irgen	$< test/$* test
	printf 'package test\nconst POOL_ALLOC_SIZE=100\n' >test/$*/pool_alloc.go

test/%/test.pb.go: test/%/test.proto
	cd ../../../.. && $(MAKE) protobuf

test/%.run: preparetests
	cd test/$* && go test
